<link href="/stylesheets/protovis.tipsy.css" type="text/css" rel="stylesheet"/>
<script type="text/javascript">
  // Returns a dictionary mapping tags to aggregated times.
  function computeTagTimes(activities) {
    var tagTimes = new Object();
    for (var i = 0; i < activities.length; i++) {
      var activity = activities[i];
      var startTime = activity['startTime'];
      var endTime = activity['endTime'];
      var totalTime = (endTime - startTime) * 1.0 / (1000 * 60 * 60);
      var tag = activity['tag'];
      if (tag == null || tag == 'Select a tag') {
        tag = 'Other';
      }
      var prevValue = tagTimes['tag'];
      if (prevValue == null) {
        prevValue = 0;
      }
      tagTimes[tag] = prevValue + totalTime;
    }
    return tagTimes;
  }

  // Split a dictionary mapping tag->time into an array of (tag,totalTime)
  // tuples.
  function generateTuples(tagTimes) {
    var tagTimeTuples = new Array();
    tagTimeTuples.totalTime = 0;
    for (var tag in tagTimes) {
      var tagTimeTuple = new Object();
      tagTimeTuple.tag = tag;
      tagTimeTuple.totalTime = tagTimes[tag];
      tagTimeTuples.totalTime += tagTimes[tag];
      tagTimeTuples.push(tagTimeTuple);
    }
    return tagTimeTuples;
  }

  var unencryptedEvents = encryptionHelpers.unpackEncryptedEvents(<%= raw @contents %>)
  var tagTimeTuples = generateTuples(computeTagTimes(unencryptedEvents));

</script>

<h1>My Events (in hours)</h1>

<div id="chart_div">
  <script type="text/javascript+protovis">
    var RADIUS = 220;
    var ERADIUS = RADIUS + 10;
    var DIAMETER = ERADIUS * 2;
    var colors = pv.Colors.category20();
    // Place a pie chart here.
    var root = new pv.Panel()
        .width(DIAMETER + 200)
        .height(DIAMETER);
    root.add(pv.Wedge)
        .data(tagTimeTuples)
        .def("o", -1)
        .outerRadius(RADIUS)
        .angle(function(d) d.totalTime / tagTimeTuples.totalTime * 2 * Math.PI)
        .left(function() ERADIUS
            + Math.cos(this.startAngle() + this.angle() / 2)
            * ((this.o() == this.index) ? 10 : 0))
        .bottom(function() ERADIUS
            - Math.sin(this.startAngle() + this.angle() / 2)
            * ((this.o() == this.index) ? 10 : 0))
        .text(function(d) d.tag + ": " + d.totalTime.toPrecision(2))
        .fillStyle(function(d) colors(d.tag))
        // this second mouseover function overrwrites the one above
        .event("mouseover", pv.Behavior.tipsy({fade: true}))
        .event("mouseout", function (d) this.o(-1));
    /* A legend entry for each tag. */
    root.add(pv.Dot)
        .data(tagTimeTuples)
        .left(DIAMETER + 30)
        .top(function() this.index * 20 + 60)
        .fillStyle(function(d) colors(d.tag))
        .strokeStyle(null)
        .shape("square")
        .size(30)
      .anchor("right").add(pv.Label)
      .text(function(d) d.tag + ": " + d.totalTime.toPrecision(2))
      .font("15px sans-serif");
    root.render();
  </script>
</div>
